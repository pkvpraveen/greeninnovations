{"version":3,"sources":["webpack:///./src/pages/page-2.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/logo.js","webpack:///./src/components/header.js","webpack:///./src/components/navigation.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","SecondPage","a","createElement","title","to","m","module","exports","require","default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","React","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","json","propTypes","shape","pathname","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","arrayOf","Logo","_776159688","react_default","gatsby_image_default","fluid","placeholderImage","childImageSharp","Header","className","gatsby_browser_entry","logo","style","color","href","Navigation","siteTitle","Layout","children","_856328897","Fragment","id","header","navigation","Date","getFullYear","node"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAAAQ,EAAAR,EAAA,KAeeS,UATI,kBACjBL,EAAAM,EAAAC,cAACJ,EAAA,EAAD,KACEH,EAAAM,EAAAC,cAACH,EAAA,EAAD,CAAKI,MAAM,aACXR,EAAAM,EAAAC,cAAA,qCACAP,EAAAM,EAAAC,cAAA,8BACAP,EAAAM,EAAAC,cAACL,EAAA,EAAD,CAAMO,GAAG,KAAT,kDCXJ,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/C,IAAAX,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAgB,EAAAnB,EAAA,IAAAoB,EAAApB,EAAAK,EAAAc,GAAAE,EAAArB,EAAA,IAAAsB,EAAAtB,EAAAK,EAAAgB,GAAArB,EAAAuB,EAAArB,EAAA,sBAAAoB,EAAAZ,IAAAV,EAAA,KAa2BwB,IAAMC,cAAc,IAuDvCC,IAAUC,OACTD,IAAUE,OAAOC,WAChBH,IAAUI,KACRJ,IAAUI,0LClEhBC,EAAmB,SAAAC,GAAiC,IAA9BC,EAA8BD,EAA9BC,SAAUC,EAAoBF,EAApBE,cACpC,OAAKA,EAGEV,IAAMb,cAAcwB,IAApBC,OAAAC,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV,MASXP,EAAiBQ,UAAY,CAC3BN,SAAUP,IAAUc,MAAM,CACxBC,SAAUf,IAAUE,OAAOC,aAC1BA,YAGUE,i+CCVf,SAASW,EAATV,GAAiD,IAAlCW,EAAkCX,EAAlCW,YAAaC,EAAqBZ,EAArBY,KAAMC,EAAeb,EAAfa,KAAMjC,EAASoB,EAATpB,MAC9BkC,EADuCC,EAAAC,KACvCF,KAcFG,EAAkBN,GAAeG,EAAKI,aAAaP,YAEzD,OACEQ,EAAAzC,EAAAC,cAACyC,EAAA1C,EAAD,CACE2C,eAAgB,CACdT,QAEFhC,MAAOA,EACP0C,cAAa,QAAUR,EAAKI,aAAatC,MACzCiC,KAAM,CACJ,CACEU,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAAS5C,GAEX,CACE6C,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASV,EAAKI,aAAaQ,QAE7B,CACEH,KAAI,gBACJC,QAAS5C,GAEX,CACE2C,KAAI,sBACJC,QAASP,IAEXU,OAAOd,KAKfH,EAAIkB,aAAe,CACjBhB,KAAI,KACJC,KAAM,GACNF,YAAW,IAGbD,EAAIH,UAAY,CACdI,YAAajB,IAAUE,OACvBgB,KAAMlB,IAAUE,OAChBiB,KAAMnB,IAAUmC,QAAQnC,IAAUC,QAClCf,MAAOc,IAAUE,OAAOC,YAGXa,8YCxDAoB,EAhBF,WACX,IAAMd,EAAOe,EAAAf,KAYb,OAAOgB,EAAAtD,EAAAC,cAACsD,EAAAvD,EAAD,CAAKwD,MAAOlB,EAAKmB,iBAAiBC,gBAAgBF,SCC5CG,EAzBA,kBACbL,EAAAtD,EAAAC,cAAA,UACE2D,UAAU,kBAEVN,EAAAtD,EAAAC,cAAA,OAAK2D,UAAU,QACbN,EAAAtD,EAAAC,cAAC4D,EAAA,EAAD,CAAM1D,GAAG,KACPmD,EAAAtD,EAAAC,cAAC6D,EAAD,QAIJR,EAAAtD,EAAAC,cAAA,OAAK2D,UAAU,WACbN,EAAAtD,EAAAC,cAAA,2CAEFqD,EAAAtD,EAAAC,cAAA,OAAK2D,UAAU,cACbN,EAAAtD,EAAAC,cAAA,KAAG8D,MAAO,CACRC,MAAO,YADT,gBAGAV,EAAAtD,EAAAC,cAAA,SAAGqD,EAAAtD,EAAAC,cAAA,KAAGgE,KAAK,oBAAR,kBACHX,EAAAtD,EAAAC,cAAA,SAAGqD,EAAAtD,EAAAC,cAAA,KAAGgE,KAAK,mCAAR,gCCNMC,UAdI,SAAA5C,KAAE6C,UAAF,OACjBb,EAAAtD,EAAAC,cAAA,WACEqD,EAAAtD,EAAAC,cAAA,MAAI2D,UAAU,WACZN,EAAAtD,EAAAC,cAAA,mBACAqD,EAAAtD,EAAAC,cAAA,uBACAqD,EAAAtD,EAAAC,cAAA,wBACAqD,EAAAtD,EAAAC,cAAA,sBACAqD,EAAAtD,EAAAC,cAAA,mBACAqD,EAAAtD,EAAAC,cAAA,uBACAqD,EAAAtD,EAAAC,cAAA,6BCIAmE,EAAS,SAAA9C,GAAgB,IAAd+C,EAAc/C,EAAd+C,SACFC,EAAAhC,KAUb,OACEgB,EAAAtD,EAAAC,cAAAqD,EAAAtD,EAAAuE,SAAA,KACEjB,EAAAtD,EAAAC,cAAA,OAAKuE,GAAG,aACNlB,EAAAtD,EAAAC,cAAA,OAAKuE,GAAG,QACNlB,EAAAtD,EAAAC,cAACwE,EAAD,MACAnB,EAAAtD,EAAAC,cAACyE,EAAD,MACApB,EAAAtD,EAAAC,cAAA,YAAOoE,KAGXf,EAAAtD,EAAAC,cAAA,UAAQuE,GAAG,UAAX,MACK,IAAIG,MAAOC,cADhB,kBAONR,EAAOvC,UAAY,CACjBwC,SAAUrD,IAAU6D,KAAK1D,YAGZiD","file":"component---src-pages-page-2-js-6831d9df737fb7411725.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst SecondPage = () => (\n  <Layout>\n    <SEO title=\"Page two\" />\n    <h1>Hi from the second page</h1>\n    <p>Welcome to page 2</p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default SecondPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nconst Logo = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      placeholderImage: file(relativePath: { eq: \"Logo.jpg\" }) {\n        childImageSharp {\n          fluid(maxWidth: 300) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n  return <Img fluid={data.placeholderImage.childImageSharp.fluid} />\n}\n\nexport default Logo\n","import {Link} from \"gatsby\"\nimport React from \"react\"\nimport Logo from './logo'\n\nconst Header = () => (\n  <header\n    className='wrapper header'\n  >\n    <div className='logo'>\n      <Link to='/'>\n        <Logo/>\n      </Link>\n    </div>\n\n    <div className='caption'>\n      <p>THE ART OF SUSTAINABLE LIVING</p>\n    </div>\n    <div className='getintouch'>\n      <p style={{\n        color: '#6d92a2',\n      }}>Get in touch</p>\n      <p><a href='tel:+91944605978'>+91 944605978</a></p>\n      <p><a href='mailto:info@greeninnovations.in'>info@greeninnovations.in</a></p>\n    </div>\n\n  </header>\n)\n\n\nexport default Header\n","import React from \"react\"\r\n\r\nconst Navigation = ({siteTitle}) => (\r\n  <nav>\r\n    <ul className='wrapper'>\r\n      <li> Home</li>\r\n      <li> Products</li>\r\n      <li> Customers</li>\r\n      <li> Gallery</li>\r\n      <li> News</li>\r\n      <li> About Us</li>\r\n      <li> Contact Us</li>\r\n    </ul>\r\n  </nav>\r\n)\r\n\r\nexport default Navigation\r\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport {useStaticQuery, graphql} from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\nimport Navigation from \"./navigation\";\n\nconst Layout = ({children}) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <div id='container'>\n        <div id='main'>\n          <Header/>\n          <Navigation/>\n          <main>{children}</main>\n        </div>\n      </div>\n      <footer id='footer'>\n        © {new Date().getFullYear()}, Built with\n      </footer>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}